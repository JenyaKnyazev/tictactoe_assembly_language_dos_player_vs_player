STA SEGMENT STACK
	DW 10 DUP(?)
STA ENDS
DATA SEGMENT
	BOARD DB 9 DUP(0)
	MSG_PLAYER DB 'PLAYER $'
	MSG_ROW DB 'ROW $'
	MSG_COL DB 'COL $'
	ROW DB ?
	COL DB ?
	PLAYER_MOVE_BOOL DB 1
	IS_WIN_BOOL DB 0
	MSG_WIN DB 'WINNER$'
	MSG_TIE DB 'ITS A TIE$'
	IS_FINISH_BOOL DB 0
DATA ENDS
CODE SEGMENT
	ASSUME CS:CODE,DS:DATA,SS:STA
MAIN:
	MOV AX,DATA
	MOV DS,AX
	CALL CLEAR_SCREAN
	CALL PRINT_BOARD
	RUN_MAIN:
	CALL INPUT
	CALL CHECK_WIN
	CALL CHECK_FINISH
	CMP IS_WIN_BOOL,1
	JE PRINT_WINNER
	CMP IS_FINISH_BOOL,0
	JE RUN_MAIN
	MOV DH,8
	MOV DL,31
	MOV AH,2
	INT 10H
	MOV DX,OFFSET MSG_TIE
	MOV AH,9
	INT 21H
	JMP FINISH_MAIN
	PRINT_WINNER:
	MOV DH,8
	MOV DL,41
	MOV AH,2
	INT 10H
	MOV DX,OFFSET MSG_WIN
	MOV AH,9
	INT 21H
	FINISH_MAIN:
	MOV DL,0
	MOV DH,23
	MOV AH,2
	INT 10H
	MOV AH,4CH
	INT 21H
CLEAR_SCREAN PROC
	MOV BH,0
	MOV AH,2
	MOV DH,0
	RUN_CLEAR2:
	MOV DL,0
	RUN_CLEAR:
	INT 10H
	MOV BL,DL
	MOV DL,' '
	INT 21H
	MOV DL,BL
	INC DL
	CMP DL,79
	JNG RUN_CLEAR
	INC DH
	CMP DH,23
	JNG RUN_CLEAR2
	RET
CLEAR_SCREAN ENDP
PRINT_BOARD PROC
	MOV DH,0
	MOV AH,2
	MOV SI,3
	RUN_PRINT3:
	MOV DL,31
	MOV CX,7
	RUN_PRINT:
	INT 10H
	MOV BL,DL
	MOV DL,'-'
	INT 21H
	MOV DL,BL
	INC DL
	LOOP RUN_PRINT
	INC DH
	MOV DL,31
	MOV CX,4
	RUN_PRINT2:
	INT 10H
	MOV BL,DL
	MOV DL,'|'
	INT 21H
	MOV DL,BL
	ADD DL,2
	LOOP RUN_PRINT2
	INC DH
	DEC SI
	JNZ RUN_PRINT3
	MOV DL,31
	MOV CX,7
	RUN_PRINT4:
	INT 10H
	MOV BL,DL
	MOV DL,'-'
	INT 21H
	MOV DL,BL
	INC DL
	LOOP RUN_PRINT4
	MOV DH,8
	MOV DL,31
	INT 10H
	MOV DX,OFFSET MSG_PLAYER
	MOV AH,9
	INT 21H
	MOV DH,10
	MOV DL,31
	MOV AH,2
	INT 10H
	MOV DX,OFFSET MSG_ROW
	MOV AH,9
	INT 21H
	MOV DH,11
	MOV DL,31
	MOV AH,2
	INT 10H
	MOV DX,OFFSET MSG_COL
	MOV AH,9
	INT 21H
	RET
PRINT_BOARD ENDP
INPUT PROC
	MOV DH,8
	MOV DL,38
	MOV AH,2
	INT 10H
	CMP PLAYER_MOVE_BOOL,1
	JNE NEXT
	MOV DL,'X'
	MOV PLAYER_MOVE_BOOL,0
	JMP NEXT2
	NEXT:
	MOV DL,'O'
	MOV PLAYER_MOVE_BOOL,1
	NEXT2:
	INT 21H
	MOV DH,10
	MOV DL,36
	INT 10H
	MOV AH,1
	INT 21H
	SUB AL,48
	MOV ROW,AL
	MOV DH,11
	MOV DL,36
	MOV AH,2
	INT 10H
	MOV AH,1
	INT 21H
	SUB AL,48
	MOV COL,AL
	CALL INPUT_TO_MATRIX
	CALL INPUT_TO_CONSOLE
	RET
INPUT ENDP
INPUT_TO_MATRIX PROC
	MOV AL,ROW
	MOV AH,0
	DEC AL
	MOV BL,3
	MUL BL
	ADD AL,COL
	DEC AL
	MOV SI,OFFSET BOARD
	ADD SI,AX
	CMP PLAYER_MOVE_BOOL,1
	JE NEXT3
	MOV AL,'X'
	JMP NEXT4
	NEXT3:
	MOV AL,'O'
	NEXT4:
	MOV [SI],AL
	RET
INPUT_TO_MATRIX ENDP
INPUT_TO_CONSOLE PROC
	MOV BH,0
	MOV AL,ROW
	MOV AH,0
	DEC AL
	MOV BL,2
	MUL BL
	MOV DH,1
	ADD DH,AL
	MOV AL,COL
	MOV AH,0
	DEC AL
	MOV BL,2
	MUL BL
	MOV DL,32
	ADD DL,AL
	MOV AH,2
	INT 10H
	CMP PLAYER_MOVE_BOOL,1
	JE NEXT5
	MOV DL,'X'
	JMP NEXT6
	NEXT5:
	MOV DL,'O'
	NEXT6:
	INT 21H
	RET
INPUT_TO_CONSOLE ENDP
CHECK_WIN PROC
	CMP PLAYER_MOVE_BOOL,1
	JNE NEXT7
	MOV AL,'O'
	JMP NEXT8
	NEXT7:
	MOV AL,'X'
	NEXT8:
	MOV SI,OFFSET BOARD
	MOV CX,3
	RUN_CHECK:
	CMP AL,[SI]
	JNE NEXT_CHECK
	CMP AL,[SI+1]
	JNE NEXT_CHECK
	CMP AL,[SI+2]
	JNE NEXT_CHECK
	MOV IS_WIN_BOOL,1
	JMP FINISH_CHECK
	NEXT_CHECK:
	ADD SI,3
	LOOP RUN_CHECK
	MOV SI,OFFSET BOARD
	MOV CX,3
	RUN_CHECK2:
	CMP AL,[SI]
	JNE NEXT_CHECK2
	CMP AL,[SI+3]
	JNE NEXT_CHECK2
	CMP AL,[SI+6]
	JNE NEXT_CHECK2
	MOV IS_WIN_BOOL,1
	JMP FINISH_CHECK
	NEXT_CHECK2:
	INC SI
	LOOP RUN_CHECK2
	MOV SI,OFFSET BOARD
	CMP AL,[SI]
	JNE NEXT_CHECK3
	CMP AL,[SI+4]
	JNE NEXT_CHECK3
	CMP AL,[SI+8]
	JNE NEXT_CHECK3
	MOV IS_WIN_BOOL,1
	JMP FINISH_CHECK
	MOV SI,OFFSET BOARD
	NEXT_CHECK3:
	MOV SI,OFFSET BOARD
	ADD SI,2
	CMP AL,[SI]
	JNE FINISH_CHECK
	CMP AL,[SI+2]
	JNE FINISH_CHECK
	CMP AL,[SI+4]
	JNE FINISH_CHECK
	MOV IS_WIN_BOOL,1
	FINISH_CHECK:
	RET
CHECK_WIN ENDP
CHECK_FINISH PROC
	MOV SI,OFFSET BOARD
	MOV CX,9
	MOV AL,0
	RUN_CHECK_FINISH:
	CMP AL,[SI]
	JE FINISH
	INC SI
	LOOP RUN_CHECK_FINISH
	MOV IS_FINISH_BOOL,1
	FINISH:
	RET
CHECK_FINISH ENDP
CODE ENDS
END MAIN